package com.davidleston.fireflower;

import com.google.common.collect.ImmutableSet;

import java.util.function.Function;
import java.util.stream.Stream;

public interface Player {
  /**
   * @param events events generated by other plays since this player last received events
   * @return Action to take as this player's turn
   */
  Action takeTurn(Stream<Event> events);

  /**
   * @param events events generated by other plays since this player last received events
   * @return A Set containing an integer representing the index of each tile in this player's hand.
   * Integers are in the order in which the tiles have been reordered.
   * For example the set of integers 4, 0, 1, 2, 3 will move the last tile to the first position.
   */
  ImmutableSet<Integer> receiveHint(Stream<Event> events);

  static Player create(Function<Stream<Event>, Action> takeTurn, Function<Stream<Event>, ImmutableSet<Integer>> receiveHint) {
    return new Player() {
      @Override
      public Action takeTurn(Stream<Event> events) {
        return takeTurn.apply(events);
      }

      @Override
      public ImmutableSet<Integer> receiveHint(Stream<Event> events) {
        return receiveHint.apply(events);
      }
    };
  }
}
